/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TransactionsImport } from './routes/_transactions'
import { Route as IndexImport } from './routes/index'
import { Route as TransactionsTransactionsIndexImport } from './routes/_transactions/transactions/index'
import { Route as TransactionsTransactionsReportImport } from './routes/_transactions/transactions/report'
import { Route as TransactionsTransactionsImportImport } from './routes/_transactions/transactions/import'

// Create/Update Routes

const TransactionsRoute = TransactionsImport.update({
  id: '/_transactions',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const TransactionsTransactionsIndexRoute =
  TransactionsTransactionsIndexImport.update({
    id: '/transactions/',
    path: '/transactions/',
    getParentRoute: () => TransactionsRoute,
  } as any)

const TransactionsTransactionsReportRoute =
  TransactionsTransactionsReportImport.update({
    id: '/transactions/report',
    path: '/transactions/report',
    getParentRoute: () => TransactionsRoute,
  } as any)

const TransactionsTransactionsImportRoute =
  TransactionsTransactionsImportImport.update({
    id: '/transactions/import',
    path: '/transactions/import',
    getParentRoute: () => TransactionsRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_transactions': {
      id: '/_transactions'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof TransactionsImport
      parentRoute: typeof rootRoute
    }
    '/_transactions/transactions/import': {
      id: '/_transactions/transactions/import'
      path: '/transactions/import'
      fullPath: '/transactions/import'
      preLoaderRoute: typeof TransactionsTransactionsImportImport
      parentRoute: typeof TransactionsImport
    }
    '/_transactions/transactions/report': {
      id: '/_transactions/transactions/report'
      path: '/transactions/report'
      fullPath: '/transactions/report'
      preLoaderRoute: typeof TransactionsTransactionsReportImport
      parentRoute: typeof TransactionsImport
    }
    '/_transactions/transactions/': {
      id: '/_transactions/transactions/'
      path: '/transactions'
      fullPath: '/transactions'
      preLoaderRoute: typeof TransactionsTransactionsIndexImport
      parentRoute: typeof TransactionsImport
    }
  }
}

// Create and export the route tree

interface TransactionsRouteChildren {
  TransactionsTransactionsImportRoute: typeof TransactionsTransactionsImportRoute
  TransactionsTransactionsReportRoute: typeof TransactionsTransactionsReportRoute
  TransactionsTransactionsIndexRoute: typeof TransactionsTransactionsIndexRoute
}

const TransactionsRouteChildren: TransactionsRouteChildren = {
  TransactionsTransactionsImportRoute: TransactionsTransactionsImportRoute,
  TransactionsTransactionsReportRoute: TransactionsTransactionsReportRoute,
  TransactionsTransactionsIndexRoute: TransactionsTransactionsIndexRoute,
}

const TransactionsRouteWithChildren = TransactionsRoute._addFileChildren(
  TransactionsRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof TransactionsRouteWithChildren
  '/transactions/import': typeof TransactionsTransactionsImportRoute
  '/transactions/report': typeof TransactionsTransactionsReportRoute
  '/transactions': typeof TransactionsTransactionsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof TransactionsRouteWithChildren
  '/transactions/import': typeof TransactionsTransactionsImportRoute
  '/transactions/report': typeof TransactionsTransactionsReportRoute
  '/transactions': typeof TransactionsTransactionsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_transactions': typeof TransactionsRouteWithChildren
  '/_transactions/transactions/import': typeof TransactionsTransactionsImportRoute
  '/_transactions/transactions/report': typeof TransactionsTransactionsReportRoute
  '/_transactions/transactions/': typeof TransactionsTransactionsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/transactions/import'
    | '/transactions/report'
    | '/transactions'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/transactions/import'
    | '/transactions/report'
    | '/transactions'
  id:
    | '__root__'
    | '/'
    | '/_transactions'
    | '/_transactions/transactions/import'
    | '/_transactions/transactions/report'
    | '/_transactions/transactions/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  TransactionsRoute: typeof TransactionsRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  TransactionsRoute: TransactionsRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_transactions"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_transactions": {
      "filePath": "_transactions.tsx",
      "children": [
        "/_transactions/transactions/import",
        "/_transactions/transactions/report",
        "/_transactions/transactions/"
      ]
    },
    "/_transactions/transactions/import": {
      "filePath": "_transactions/transactions/import.tsx",
      "parent": "/_transactions"
    },
    "/_transactions/transactions/report": {
      "filePath": "_transactions/transactions/report.tsx",
      "parent": "/_transactions"
    },
    "/_transactions/transactions/": {
      "filePath": "_transactions/transactions/index.tsx",
      "parent": "/_transactions"
    }
  }
}
ROUTE_MANIFEST_END */
