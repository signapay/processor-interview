/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TransactionsImport } from './routes/_transactions'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index'
import { Route as AuthenticatedProfileImport } from './routes/_authenticated/profile'
import { Route as AuthenticatedTransactionsTransactionsIndexImport } from './routes/_authenticated/_transactions/transactions/index'
import { Route as AuthenticatedTransactionsTransactionsReportImport } from './routes/_authenticated/_transactions/transactions/report'
import { Route as AuthenticatedTransactionsTransactionsImportImport } from './routes/_authenticated/_transactions/transactions/import'

// Create/Update Routes

const TransactionsRoute = TransactionsImport.update({
  id: '/_transactions',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedProfileRoute = AuthenticatedProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedTransactionsTransactionsIndexRoute =
  AuthenticatedTransactionsTransactionsIndexImport.update({
    id: '/_transactions/transactions/',
    path: '/transactions/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedTransactionsTransactionsReportRoute =
  AuthenticatedTransactionsTransactionsReportImport.update({
    id: '/_transactions/transactions/report',
    path: '/transactions/report',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedTransactionsTransactionsImportRoute =
  AuthenticatedTransactionsTransactionsImportImport.update({
    id: '/_transactions/transactions/import',
    path: '/transactions/import',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/_transactions': {
      id: '/_transactions'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof TransactionsImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/profile': {
      id: '/_authenticated/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthenticatedProfileImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/_transactions/transactions/import': {
      id: '/_authenticated/_transactions/transactions/import'
      path: '/transactions/import'
      fullPath: '/transactions/import'
      preLoaderRoute: typeof AuthenticatedTransactionsTransactionsImportImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/_transactions/transactions/report': {
      id: '/_authenticated/_transactions/transactions/report'
      path: '/transactions/report'
      fullPath: '/transactions/report'
      preLoaderRoute: typeof AuthenticatedTransactionsTransactionsReportImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/_transactions/transactions/': {
      id: '/_authenticated/_transactions/transactions/'
      path: '/transactions'
      fullPath: '/transactions'
      preLoaderRoute: typeof AuthenticatedTransactionsTransactionsIndexImport
      parentRoute: typeof AuthenticatedImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedRouteChildren {
  AuthenticatedProfileRoute: typeof AuthenticatedProfileRoute
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedTransactionsTransactionsImportRoute: typeof AuthenticatedTransactionsTransactionsImportRoute
  AuthenticatedTransactionsTransactionsReportRoute: typeof AuthenticatedTransactionsTransactionsReportRoute
  AuthenticatedTransactionsTransactionsIndexRoute: typeof AuthenticatedTransactionsTransactionsIndexRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedProfileRoute: AuthenticatedProfileRoute,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedTransactionsTransactionsImportRoute:
    AuthenticatedTransactionsTransactionsImportRoute,
  AuthenticatedTransactionsTransactionsReportRoute:
    AuthenticatedTransactionsTransactionsReportRoute,
  AuthenticatedTransactionsTransactionsIndexRoute:
    AuthenticatedTransactionsTransactionsIndexRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof TransactionsRoute
  '/profile': typeof AuthenticatedProfileRoute
  '/': typeof AuthenticatedIndexRoute
  '/transactions/import': typeof AuthenticatedTransactionsTransactionsImportRoute
  '/transactions/report': typeof AuthenticatedTransactionsTransactionsReportRoute
  '/transactions': typeof AuthenticatedTransactionsTransactionsIndexRoute
}

export interface FileRoutesByTo {
  '': typeof TransactionsRoute
  '/profile': typeof AuthenticatedProfileRoute
  '/': typeof AuthenticatedIndexRoute
  '/transactions/import': typeof AuthenticatedTransactionsTransactionsImportRoute
  '/transactions/report': typeof AuthenticatedTransactionsTransactionsReportRoute
  '/transactions': typeof AuthenticatedTransactionsTransactionsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/_transactions': typeof TransactionsRoute
  '/_authenticated/profile': typeof AuthenticatedProfileRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/_transactions/transactions/import': typeof AuthenticatedTransactionsTransactionsImportRoute
  '/_authenticated/_transactions/transactions/report': typeof AuthenticatedTransactionsTransactionsReportRoute
  '/_authenticated/_transactions/transactions/': typeof AuthenticatedTransactionsTransactionsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/profile'
    | '/'
    | '/transactions/import'
    | '/transactions/report'
    | '/transactions'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/profile'
    | '/'
    | '/transactions/import'
    | '/transactions/report'
    | '/transactions'
  id:
    | '__root__'
    | '/_authenticated'
    | '/_transactions'
    | '/_authenticated/profile'
    | '/_authenticated/'
    | '/_authenticated/_transactions/transactions/import'
    | '/_authenticated/_transactions/transactions/report'
    | '/_authenticated/_transactions/transactions/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  TransactionsRoute: typeof TransactionsRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  TransactionsRoute: TransactionsRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/_transactions"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/profile",
        "/_authenticated/",
        "/_authenticated/_transactions/transactions/import",
        "/_authenticated/_transactions/transactions/report",
        "/_authenticated/_transactions/transactions/"
      ]
    },
    "/_transactions": {
      "filePath": "_transactions.tsx"
    },
    "/_authenticated/profile": {
      "filePath": "_authenticated/profile.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/_transactions/transactions/import": {
      "filePath": "_authenticated/_transactions/transactions/import.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/_transactions/transactions/report": {
      "filePath": "_authenticated/_transactions/transactions/report.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/_transactions/transactions/": {
      "filePath": "_authenticated/_transactions/transactions/index.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
